services:
  watchtower:
    image: containrrr/watchtower
    command:
      - "--label-enable"
      - "--interval"
      - "60"
    volumes:
      - /root/.docker/config.json:/config.json
      - /var/run/docker.sock:/var/run/docker.sock
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      -  ./init_schemas.sql:/docker-entrypoint-initdb.d/init_schemas.sql
    networks:
      - app-network

  goose:
    build:
      context: .
      dockerfile: Dockerfile.goose
    environment:
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: db
      DB_PORT: 5432
    entrypoint: ["/bin/sh", "/app/migration/wait-for-db.sh"]
    depends_on:
      - db
    networks:
      - app-network

  back:
    image: deretz/endurace_reporting:backend.latest
    labels: 
      - "com.centurylinklabs.watchtower.enable=true"
    build:
      context: ./back
    environment:
      SECRET : ${SECRET}
      DATABASE_URL: ${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      - db
    ports:
      - "8000:8000"
    volumes:
      - back_workout:/app/back/workout
    networks:
      - app-network
    
  go_server:
    image: deretz/endurace_reporting:go_server.latest
    labels: 
      - "com.centurylinklabs.watchtower.enable=true"
    build:
      context: .
      dockerfile: Dockerfile.go_server
    environment:
      POSTGRES_URL: ${POSTGRES_URL}
      SECRET : ${SECRET}
      DATABASE_URL: ${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      - db
    ports:
      - "8080:8080"
    networks:
      - app-network

  front:
    image: deretz/endurace_reporting:frontend.latest
    build:
      context: ./front
    depends_on:
      - db
      - back
    environment:
      API_ENDPOINT: ${API_ENDPOINT}
      API_AUTH: ${API_AUTH}
      DB_HOST: db
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
      DB_PORT: "5432"
    ports:
      - "8501:8501"
    networks:
      - app-network

volumes:
  pg_data:
  back_workout:

networks:
  app-network:
    driver: bridge
