// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: users.sql

package database

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const createUser = `-- name: CreateUser :one
INSERT INTO settings.users(user_id, username, password, email, created_at, updated_at)
VALUES (
  gen_random_uuid(), $1, $2, $3, NOW(), NOW()
)
RETURNING user_id, username, email, created_at
`

type CreateUserParams struct {
	Username string
	Password string
	Email    string
}

type CreateUserRow struct {
	UserID    uuid.UUID
	Username  string
	Email     string
	CreatedAt sql.NullTime
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (CreateUserRow, error) {
	row := q.db.QueryRowContext(ctx, createUser, arg.Username, arg.Password, arg.Email)
	var i CreateUserRow
	err := row.Scan(
		&i.UserID,
		&i.Username,
		&i.Email,
		&i.CreatedAt,
	)
	return i, err
}
